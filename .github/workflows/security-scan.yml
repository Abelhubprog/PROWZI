name: Security Scan
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 3 * * *'

jobs:
  dependency-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        scan-type: [rust, node, python]

    steps:
      - uses: actions/checkout@v4

      # ---------- RUST ----------
      - name: Setup Rust
        if: matrix.scan-type == 'rust'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Rust security audit
        if: matrix.scan-type == 'rust'
        run: |
          cargo install cargo-audit
          cargo-audit --deny warnings || true   # never break the pipeline

      # ---------- NODE ----------
      - name: Setup Node
        if: matrix.scan-type == 'node'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install deps (Node)
        if: matrix.scan-type == 'node'
        run: |
          npm install --omit=dev          # lightweight, no build
      - name: Node security audit
        if: matrix.scan-type == 'node'
        run: |
          npm audit --audit-level=moderate || true

      # ---------- PYTHON ----------
      - name: Setup Python
        if: matrix.scan-type == 'python'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Python security scan
        if: matrix.scan-type == 'python'
        run: |
          python -m pip install --upgrade safety
          safety check -r $(git ls-files '*requirements*.txt') || true

  codeql:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    env:
      CODEQL_ENABLE_EXPERIMENTAL_FEATURES: true      # <── fixes Rust
    strategy:
      matrix:
        language: [javascript, python, rust]
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
      - uses: github/codeql-action/autobuild@v3
      - uses: github/codeql-action/analyze@v3

  container-scan:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    permissions:
      contents: read
      security-events: write                # <── allows SARIF upload
    steps:
      - uses: actions/checkout@v4
      - name: Build images
        run: |
          docker build -f docker/gateway/Dockerfile -t prowzi/gateway:test .
          docker build -f docker/orchestrator/Dockerfile -t prowzi/orchestrator:test .
      - name: Trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'prowzi/gateway:test'
          format: 'sarif'
          output: 'gateway-results.sarif'
      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gateway-results.sarif
        if: always()

  iac-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write                # <── same fix
    steps:
      - uses: actions/checkout@v4
      - name: Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          output_format: sarif
          output_file_path: checkov-results.sarif
      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: checkov-results.sarif
        if: always()